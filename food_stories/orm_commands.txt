>>> from core.models import *
>>> from stories.models import *
>>> cat1 = Category(title='Category #1', image='image.png')
>>> cat1.save()
>>> cat1.title = 'Cat #1'
>>> cat1.save()
>>> cat2 = Category.objects.create(title='Cat 2', image='image2.png')
>>> categories = Category.objects.all()
>>> categories
<QuerySet [<Category: Category object (1)>, <Category: Category object (2)>, <Category: Category object (3)>]>
>>> categories
<QuerySet [<Category: Category object (1)>, <Category: Category object (2)>, <Category: Category object (3)>]>
>>> a = 1
>>> a
1
>>> a
1
>>> categories
<QuerySet [<Category: Category object (1)>, <Category: Category object (2)>, <Category: Category object (3)>, <Category: Category object (4)>]>
>>> categories[:3]
<QuerySet [<Category: Category object (1)>, <Category: Category object (2)>, <Category: Category object (3)>]>
>>> cat_3 = categories[:3]
>>> cat_2 = cat_3[:2]
>>> cat_2
<QuerySet [<Category: Category object (1)>, <Category: Category object (2)>]>
>>> query(cat_2)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'query' is not defined
>>> print(cat_2.query)
SELECT "stories_category"."id", "stories_category"."created_at", "stories_category"."updated_at", "stories_category"."title", "stories_category"."image" FROM "stories_category" LIMIT 2
>>> print(cat_3.query)
SELECT "stories_category"."id", "stories_category"."created_at", "stories_category"."updated_at", "stories_category"."title", "stories_category"."image" FROM "stories_category" LIMIT 3
>>> tag1 = Tag.objects.create(title='Tag 2')
>>> tag3 = Tag.objects.create(title='Tag 3')
>>> User.objects.first()
<User: idris>
>>> idris = User.objects.first()
>>> cat1 = Category.objects.get(id=1)
>>> cat1
<Category: Category object (1)>
>>> recipe = Recipe.objects.create(author=idris, category=cat1, title='Recipe #3', short_description='ksdnfkdnf', description='desc', image='image.png', cover_image='cover.jpg') 
>>> recipe.tags.add(tag1, tag2)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'tag2' is not defined
>>> recipe.tags.add(tag1, tag3)
>>> recipe.tags.remove(tag1)
>>> recipe.tags.remove(tag3)
>>> recipe.tags.add(tag1)
>>> recipe.author.id
1
>>> recipe.author.first_name
''
>>> recipe.author.username
'idris'
>>> Recipe.objects.get(id=1)
<Recipe: Recipe object (1)>
>>> Recipe.objects.get(id=10000)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/query.py", line 650, in get
    raise self.model.DoesNotExist(
stories.models.Recipe.DoesNotExist: Recipe matching query does not exist.
>>> Recipe.objects.get(title__startswith='R')
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/query.py", line 653, in get
    raise self.model.MultipleObjectsReturned(
stories.models.Recipe.MultipleObjectsReturned: get() returned more than one Recipe -- it returned 3!
>>> Recipe.objects.filter(title__startswith='R')
<QuerySet [<Recipe: Recipe object (1)>, <Recipe: Recipe object (2)>, <Recipe: Recipe object (3)>]>
>>> Recipe.objects.filter(title__startswith='R').first()
<Recipe: Recipe object (1)>
>>> Recipe.objects.filter(id=1000).first()
>>> Recipe.objects.filter(id=1).first()
<Recipe: Recipe object (1)>
>>> r = Recipe.objects.filter(id=1)
>>> r.title
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'title'
>>> r[0].title
'Recipe #1'
>>> rs = Recipe.objects.filter(title__startswith='R')
>>> print(rs.query)
SELECT "stories_recipe"."id", "stories_recipe"."created_at", "stories_recipe"."updated_at", "stories_recipe"."author_id", "stories_recipe"."category_id", "stories_recipe"."title", "stories_recipe"."short_description", "stories_recipe"."description", "stories_recipe"."image", "stories_recipe"."cover_image" FROM "stories_recipe" WHERE "stories_recipe"."title"::text LIKE R%
>>> rs = Recipe.objects.filter(title__istartswith='R')
>>> print(rs.query)
SELECT "stories_recipe"."id", "stories_recipe"."created_at", "stories_recipe"."updated_at", "stories_recipe"."author_id", "stories_recipe"."category_id", "stories_recipe"."title", "stories_recipe"."short_description", "stories_recipe"."description", "stories_recipe"."image", "stories_recipe"."cover_image" FROM "stories_recipe" WHERE UPPER("stories_recipe"."title"::text) LIKE UPPER(R%)
>>> rs
<QuerySet [<Recipe: Recipe object (1)>, <Recipe: Recipe object (2)>, <Recipe: Recipe object (3)>]>
>>> rs = Recipe.objects.filter(title__istartswith='r')
>>> rs
<QuerySet [<Recipe: Recipe object (1)>, <Recipe: Recipe object (2)>, <Recipe: Recipe object (3)>]>
>>> rs = Recipe.objects.filter(title__startswith='r')
>>> rs
<QuerySet []>
>>> r.author.id
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'author'
>>> recipe = Recipe.objects.first()
>>> recipe.category.title
'Dessert'
>>> Recipe.objects.filter(author__username__contains='i')
<QuerySet [<Recipe: Recipe object (1)>, <Recipe: Recipe object (2)>, <Recipe: Recipe object (3)>]>
>>> Recipe.objects.filter(author__username__contains='I')
<QuerySet []>
>>> Category.objects.filter(title__istartwith='c')
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/query.py", line 1420, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/query.py", line 1438, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/query.py", line 1445, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1532, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1562, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1478, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1297, in build_lookup
    lhs = self.try_transform(lhs, lookup_name)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1341, in try_transform
    raise FieldError(
django.core.exceptions.FieldError: Unsupported lookup 'istartwith' for CharField or join on the field not permitted, perhaps you meant istartswith or startswith or iendswith?
>>> Category.objects.filter(title__istartswith='c')
<QuerySet [<Category: Category object (2)>, <Category: Category object (3)>, <Category: Category object (4)>]>
>>> Category.objects.filter(title__istartswith__in=['c', 'd'])
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/query.py", line 1420, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/query.py", line 1438, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/query.py", line 1445, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1532, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1562, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1478, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1286, in build_lookup
    lhs = self.try_transform(lhs, name)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1341, in try_transform
    raise FieldError(
django.core.exceptions.FieldError: Unsupported lookup 'istartswith' for CharField or join on the field not permitted, perhaps you meant istartswith or startswith or iendswith?
>>> Category.objects.filter(title__istartswith=['c', 'd'])
<QuerySet []>
>>> Category.objects.filter(title__in__istartswith=['c', 'd'])
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/query.py", line 1420, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/query.py", line 1438, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/query.py", line 1445, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1532, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1562, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1478, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1286, in build_lookup
    lhs = self.try_transform(lhs, name)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1341, in try_transform
    raise FieldError(
django.core.exceptions.FieldError: Unsupported lookup 'in' for CharField or join on the field not permitted, perhaps you meant in?
>>> Category.objects.filter(id__in=[1,2,3,4,5])
<QuerySet [<Category: Category object (1)>, <Category: Category object (2)>, <Category: Category object (3)>, <Category: Category object (4)>]>
>>> Category.objects.filter(title__icontains__in=['c', 'd'])
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/query.py", line 1420, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/query.py", line 1438, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/query.py", line 1445, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1532, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1562, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1478, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1286, in build_lookup
    lhs = self.try_transform(lhs, name)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1341, in try_transform
    raise FieldError(
django.core.exceptions.FieldError: Unsupported lookup 'icontains' for CharField or join on the field not permitted, perhaps you meant icontains or contains?
>>> Category.objects.filter(title__icontains='c')
<QuerySet [<Category: Category object (2)>, <Category: Category object (3)>, <Category: Category object (4)>]>
>>> Category.objects.filter(title__icontains='d')
<QuerySet [<Category: Category object (1)>]>
>>> Category.objects.filter(models.Q(title__icontains='d') | models.Q(title_icontains='c'))
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/query.py", line 1420, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/query.py", line 1438, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/query.py", line 1445, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1532, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1562, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1388, in build_filter
    return self._add_q(
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1562, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1407, in build_filter
    lookups, parts, reffed_expression = self.solve_lookup_type(arg)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1217, in solve_lookup_type
    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1709, in names_to_path
    raise FieldError(
django.core.exceptions.FieldError: Cannot resolve keyword 'title_icontains' into field. Choices are: created_at, id, image, recipe, title, updated_at
>>> Category.objects.filter(models.Q(title__icontains='d') | models.Q(title__icontains='c'))
<QuerySet [<Category: Category object (1)>, <Category: Category object (2)>, <Category: Category object (3)>, <Category: Category object (4)>]>
>>> Category.objects.filter(title__icontains='d', title__icontains='c')  File "<console>", line 1
SyntaxError: keyword argument repeated: title__icontains
>>> Category.objects.filter(title__icontains='d', id=1)
<QuerySet [<Category: Category object (1)>]>
>>> Category.objects.filter(title__icontains='c', id=1)
<QuerySet []>
>>> Category.objects.filter(title__icontains='c')
<QuerySet [<Category: Category object (2)>, <Category: Category object (3)>, <Category: Category object (4)>]>
>>> Category.objects.filter(title__icontains='c', id=2)
<QuerySet [<Category: Category object (2)>]>
>>> Category.objects.filter(title__icontains=['c', 'd'])
<QuerySet []>
>>> Category.objects.filter(models.Q(title__icontains='d') & models.Q(title__icontains='c'))
<QuerySet []>
>>> c = Category.objects.filter(models.Q(title__icontains='d') & models.Q(title__icontains='c'))
>>> print(c.query(
... print(c.query)
KeyboardInterrupt
>>> print(c.query)
SELECT "stories_category"."id", "stories_category"."created_at", "stories_category"."updated_at", "stories_category"."title", "stories_category"."image" FROM "stories_category" WHERE (UPPER("stories_category"."title"::text) LIKE UPPER(%d%) AND UPPER("stories_category"."title"::text) LIKE UPPER(%c%))
>>> c = Category.objects.filter(models.Q(title__icontains='d') & models.Q(title__icontains='c'))
>>> c
<QuerySet [<Category: Category object (2)>]>
>>> Category.objects.filter(title__icontains=['c', 'd'])
<QuerySet []>
>>> c = Category.objects.filter(title__icontains=['c', 'd'])
>>> print(c.query)SELECT "stories_category"."id", "stories_category"."created_at", "stories_category"."updated_at", "stories_category"."title", "stories_category"."image" FROM "stories_category" WHERE UPPER("stories_category"."title"::text) LIKE UPPER(%['c', 'd']%)
>>> 
>>> c = Category.objects.filter(title__icontains=('c', 'd'))
>>> c
<QuerySet []>
>>> c = Category.objects.filter(title__icontains__in=('c', 'd'))
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/query.py", line 1420, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/query.py", line 1438, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/query.py", line 1445, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1532, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1562, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1478, in build_filter
    condition = self.build_lookup(lookups, col, value)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1286, in build_lookup
    lhs = self.try_transform(lhs, name)
  File "/Users/idrissabanli/TAGroups/sigma/food_stories/.venv/lib/python3.9/site-packages/django/db/models/sql/query.py", line 1341, in try_transform
    raise FieldError(
django.core.exceptions.FieldError: Unsupported lookup 'icontains' for CharField or join on the field not permitted, perhaps you meant icontains or contains?
>>> Category.objects.filter(title__icontains=['c', 'd'])